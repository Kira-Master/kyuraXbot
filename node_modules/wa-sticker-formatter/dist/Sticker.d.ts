/// <reference types="node" />
import { IStickerOptions } from './Types';
import { StickerTypes } from './lib/Metadata/StickerTypes';
export declare class Sticker {
    private data;
    metadata: Partial<IStickerOptions>;
    constructor(data: string | Buffer, metadata?: Partial<IStickerOptions>);
    private _parse;
    private _getMimeType;
    /**
     * Builds the sticker
     * @param {string} [type] - How you want your sticker to look like
     * @returns {Promise<Buffer>} A promise that resolves to the sticker buffer
     */
    build: (type?: StickerTypes) => Promise<Buffer>;
    get defaultFilename(): string;
    /**
     * Saves the sticker to a file
     * @param [filename] - Filename to save the sticker to
     * @returns filename
     */
    toFile: (filename?: string) => Promise<string>;
    /**
     * @deprecated
     * Use the `Sticker.build()` method instead
     */
    get: (type?: StickerTypes) => Promise<Buffer>;
}
export declare const createSticker: (data: string | Buffer, metadata?: Partial<IStickerOptions> | undefined) => Promise<Buffer>;
